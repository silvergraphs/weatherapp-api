{"version":3,"sources":["logo.svg","components/Header.jsx","components/Weather.jsx","components/Map.jsx","config.js","components/Content.jsx","components/Search.jsx","WeatherApp.js","index.js"],"names":["module","exports","Header","src","logo","className","alt","style","marginTop","fontSize","color","width","opacity","marginBottom","Weather","props","data","name","sys","main","Math","round","temp","paddingBottom","country","float","pressure","paddingLeft","humidity","temp_max","temp_min","withScriptjs","withGoogleMap","coord","lat","lon","defaultZoom","center","lng","config","baseURL","gmapsKey","Content","Number","cod","message","margin","googleMapURL","loadingElement","containerElement","height","padding","mapElement","Search","useState","newCity","setNewCity","handleSubmit","event","key","target","value","preventDefault","setCity","type","placeholder","onChange","e","onKeyPress","onClick","onSubmit","App","apiData","setApiData","city","useEffect","a","apiUrl","fetch","json","convertedData","fetchData","version","xmlns","cx","cy","r","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09a58fca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.493f0a90.svg\";","import React from \"react\";\nimport logo from \"../logo.svg\";\n\nexport default function Header() {\n  return (\n    <>\n      <img src={logo} className=\"Weather-logo\" alt=\"logo\" />\n      <h1 style={{ marginTop: \"0.3em\", fontSize: \"1.3em\" }}>Weather App</h1>\n      <hr\n        color=\"white\"\n        width=\"131vmin\"\n        style={{ opacity: 0.3, marginBottom: \"1.3em\" }}\n      ></hr>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Weather(props) {\n  if (props.data) {\n    // If the data was loaded, returns the component\n    const { name, sys, main } = props.data;\n\n    return (\n      <>\n        <strong style={{ fontSize: \"2em\" }}>{Math.round(main.temp)}° C</strong>\n        {/* I use Math.round to give rounded number temp */}\n        <p style={{ fontSize: \"0.8em\", paddingBottom: \"1em\" }}>\n          {name}, {sys.country}\n        </p>\n        <div className=\"Weather-data\">\n          <div style={{ float: \"left\" }}>\n            {main.pressure}hPa\n            <p style={{ fontSize: \"0.4em\" }}>PRESSURE</p>\n          </div>\n          <div style={{ float: \"left\", paddingLeft: \"0.85em\" }}>\n            {main.humidity}%<p style={{ fontSize: \"0.4em\" }}>HUMIDITY</p>\n          </div>\n          <div style={{ float: \"left\", paddingLeft: \"0.85em\" }}>\n            {Math.round(main.temp_max)}° C\n            <p style={{ fontSize: \"0.4em\" }}>MAX. TEMP</p>\n          </div>\n          <div style={{ float: \"left\", paddingLeft: \"0.85em\" }}>\n            {Math.round(main.temp_min)}° C\n            <p style={{ fontSize: \"0.4em\" }}>MIN. TEMP</p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { GoogleMap, withScriptjs, withGoogleMap } from \"react-google-maps\";\n\nfunction Map(props) {\n  if (props.data) {\n    // If receives coords, shows the map component\n    const { lat, lon } = props.data.coord;\n    return (\n      <GoogleMap defaultZoom={8} center={{ lat: lat, lng: lon }}></GoogleMap>\n    );\n  } else {\n    // If not, shows a loading message\n    return <div>Fetching map data...</div>;\n  }\n}\n\nexport default withScriptjs(withGoogleMap(Map));\n","const config = {\n  baseURL: \"\",\n  gmapsKey: \"AIzaSyCPljZUvezU1eaM0zqEDcjdFDHujhSj03o\", // Google JavaScript API Key\n};\n\nexport default config;\n","import React from \"react\";\nimport Weather from \"./Weather\";\nimport Map from \"./Map\";\n\nimport config from \"../config\";\n\nexport default function Content(props) {\n  const convertedCode = Number(props.data.cod);\n  // I convert the status code because the API returns 200 OK in String and 404 in Integer\n  // If the code is 200 it shows the components, if not it shows an error message\n  if (convertedCode !== 200) {\n    return (\n      <>\n        <strong>Error {props.data.cod}</strong>\n        <p>{props.data.message}</p>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Weather data={props.data} />\n        <Map\n          style={{ margin: `2em` }}\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&key=${config.gmapsKey}`}\n          loadingElement={<div>Loading map</div>}\n          containerElement={\n            <div\n              style={{\n                width: `400px`,\n                height: `400px`,\n                padding: `0.7em 1em 1em 1em`,\n              }}\n            />\n          }\n          mapElement={<div style={{ height: `100%` }} />}\n          data={props.data}\n        />\n      </>\n    );\n  }\n}\n","import React, { useState } from \"react\";\n\nexport default function Search(props) {\n  const [newCity, setNewCity] = useState(null);\n\n  const handleCityChange = (event) => {\n    // This function saves the value of the new desired city in the state\n    setNewCity(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    // This function updates the state of the parent component\n    // only if the user press Enter or the Search button\n    if (event.key === \"Enter\" || event.target.value === \"Search\") {\n      event.preventDefault();\n      if (newCity) {\n        props.setCity(newCity);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <form style={{ paddingBottom: \"1em\" }}>\n        <label className=\"App-search-label\">\n          <input\n            className=\"App-search-input\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"City name\"\n            onChange={(e) => handleCityChange(e)}\n            onKeyPress={(e) => handleSubmit(e)}\n          />\n        </label>\n        <input\n          className=\"App-search-button\"\n          type=\"button\"\n          value=\"Search\"\n          onClick={(e) => handleSubmit(e)}\n          onSubmit={(e) => handleSubmit(e)}\n        />\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport Search from \"./components/Search\";\n\nimport config from \"./config\"; // Configuration file (API Url, API Keys)\n\nfunction App() {\n  // State of the component where i save the data\n  const [apiData, setApiData] = useState(null);\n  const [city, setCity] = useState(\"London\"); // Default city is London at initial State\n\n  // When the component is mounted, updates the status fetching all data\n  useEffect(() => {\n    const fetchData = async () => {\n      const apiUrl = `${config.baseURL}api?city=${city}`;\n      const data = await fetch(apiUrl);\n      const convertedData = await data.json();\n      setApiData(convertedData);\n    };\n    fetchData();\n  }, [city]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-content\">\n        <Header />\n        {apiData ? ( // If the Api Data is loaded, mount the components\n          <>\n            <Search setCity={setCity} />\n            <Content data={apiData} />\n          </>\n        ) : (\n          // If not, shows an loading spinner\n          <div>\n            <svg\n              className=\"circle-loader progress\"\n              width=\"40\"\n              height=\"40\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <circle cx=\"20\" cy=\"20\" r=\"15\"></circle>\n            </svg>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./WeatherApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}